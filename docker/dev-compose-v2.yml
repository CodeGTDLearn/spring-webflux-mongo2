version: "3.4"

x-common-variables:
  &env-vars
  PORT_API: 8080
  MONGO_INITDB_DATABASE: api-db
  HOST: mongo1
  PORT: 27017
  MONGO_INITDB_ROOT_USERNAME: root
  MONGO_INITDB_ROOT_PASSWORD: root
  AUTH_MAN: admin

networks:
  api-net:

services:
  mongo1:
    container_name: mongo1
    image: mongo:4.4.4
    restart: always
    ports:
      - "27017:27017"
    networks:
      - api-net
    volumes:
      - ../docker/mongo-data-db:/data/db
    environment:
      *env-vars
    command: bash -c "
        mongod --replSet docker-rs --port 27017
        && sleep 5
        && mongo --host mongo1:27017 --eval 'rs.initiate();'
        && exit
      "
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo1:27017/api-db --quiet
      interval: 20s
      timeout: 10s
      start_period: 10s

  api:
    container_name: api
    image: pauloportfolio/api
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
      args:
        JAR_FILE: target/*.jar
    ports:
      - "8080:8080"
      - "5005:5005"
    volumes:
      - ../docker/mongo-data-db:/data/db
    depends_on:
      - mongo1
    networks:
      - api-net
    environment:
      # API MANAGE AUTOMATICALLY THE PROFILES:
      # A) PROFILES ARE MANAGED/ACTIVATED IN API-APPLICATION.YML -
      #      PROFILE: dev
      PORT_DEBUG: 5005
      <<: *env-vars
      DEBUG_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xmx1G -Xms128m -XX:MaxMetaspaceSize=128m