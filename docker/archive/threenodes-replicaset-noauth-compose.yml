version: "3.8"

x-common-variables:
  &env-vars
  URI: mongodb://mongo1:9042,mongo2:9142,mongo3:9242/rs-db?replicaSet=threeNodesRs
  RS_AUTH: admin
  RS_USERNAME: dev-rs
  RS_PASSWORD: dev-rs
  PORT_API: 8080

volumes:
  api_vol:

networks:
  api_net:

services:
  mongo1:
    container_name: mongo1
    image: mongo:4.4.4
    restart: always
    command: mongod --replSet threeNodesRs --port 9042
    ports:
      - "9042:9042"
    networks:
      - api_net
    volumes:
      - ~/mongors/data1:/data/db
    depends_on:
      - mongo2
#    healthcheck:
      # test: [ 'CMD', 'mongo', '-u', 'app_db_name.txt', '-p', 'app_db_name.txt', '--port', '9042' ]
      # test: mongo --user=$$RS_USERNAME --app_db_password=$$RS_PASSWORD --port=9042
#      test: echo 'db.runCommand("ping").ok' | mongo mongo1:9042/test --quiet
#      interval: 20s
#      timeout: 10s
#      start_period: 5s
#      retries: 5

  mongo2:
    container_name: mongo2
    image: mongo:4.4.4
    restart: always
    command: mongod --replSet threeNodesRs --port 9142
    ports:
      - "9142:9142"
    networks:
      - api_net
    volumes:
      - ~/mongors/data2:/data/db
    depends_on:
      - mongo3
#    healthcheck:
      # test: [ 'CMD', 'mongo', '-u', 'app_db_name.txt', '-p', 'app_db_name.txt', '--port', '9042' ]
      # test: mongo --user=$$RS_USERNAME --app_db_password=$$RS_PASSWORD --port=9042
#      test: echo 'db.runCommand("ping").ok' | mongo mongo1:9142/test --quiet
#      interval: 20s
#      timeout: 10s
#      start_period: 5s
#      retries: 5

  mongo3:
    container_name: mongo3
    image: mongo:4.4.4
    restart: always
    command: mongod --replSet threeNodesRs --port 9242
    ports:
      - "9242:9242"
    networks:
      - api_net
    volumes:
      - ~/mongors/data3:/data/db
#    healthcheck:
      # test: [ 'CMD', 'mongo', '-u', 'app_db_name.txt', '-p', 'app_db_name.txt', '--port', '9042' ]
      # test: mongo --user=$$RS_USERNAME --app_db_password=$$RS_PASSWORD --port=9042
#      test: echo 'db.runCommand("ping").ok' | mongo mongo1:9242/test --quiet
#      interval: 20s
#      timeout: 10s
#      start_period: 5s
#      retries: 5

  api3nodes:
    container_name: api3nodes
    image: pauloportfolio/api3nodes
    build:
      context: ../..
      dockerfile: ../Dockerfile
      args:
        JAR_FILE: target/*.jar
    ports:
      - "8080:8080"
      - "5005:5005"
    volumes:
      - api_vol:/data/db
    networks:
      - api_net
    depends_on:
      - mongo1
    environment:
      PORT_DEBUG: 5005
      <<: *env-vars
      DEBUG_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xmx1G -Xms128m -XX:MaxMetaspaceSize=128m