#https://github.com/shoridevel/mongo-replicaset-docker-compose/blob/main/docker-compose.yaml
version: '3.8'

x-common-variables:
  &env-vars
  RS_NAME: docker-rs
  RS_USERNAME: admin
  RS_PASSWORD: admin
  RS_PRIMARY: mongo1
  RS_PORT: 9042
  RS_DB: test-db
  RS_AUTH: admin
  PORT_API: 8080
#  MONGO_INITDB_ROOT_USERNAME: admin
#  MONGO_INITDB_ROOT_PASSWORD: admin

networks:
  api-net:
    driver: bridge

volumes:
  api_vol:

services:
  mongo1:
    container_name: mongo1
    image: mongo:4.4.4
    volumes:
      - ~/mongors/data1:/data/db
      - ./rs-scripts/rs-init.sh:/scripts/rs-init.sh
    networks:
      - api-net
    ports:
      - 9042:9042
    restart: always
    depends_on:
      - mongo2
      - mongo3
    command: >-
      bash -c "mongod --replSet docker-rs --port 9042;\
        sleep 5;\
        chmod +x /scripts/rs-init.sh;\
        /scripts/rs-init.sh"
    #    entrypoint: [ "bash", "-c", "chmod +x /scripts/rs-init.sh && /scripts/rs-init.sh" ]
    environment:
      *env-vars
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo1:9042/test --quiet
      interval: 20s
      timeout: 10s
      start_period: 10s

  mongo2:
    container_name: mongo2
    image: mongo:4.4.4
    volumes:
      - ~/mongors/data2:/data/db
    networks:
      - api-net
    ports:
      - 9142:9142
    restart: always
    depends_on:
      - mongo3
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "docker-rs", "--port", "9142" ]
    environment:
      *env-vars
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo2:9142/test --quiet
      interval: 20s
      timeout: 10s
      start_period: 10s

  mongo3:
    container_name: mongo3
    image: mongo:4.4.4
    volumes:
      - ~/mongors/data3:/data/db
    networks:
      - api-net
    ports:
      - 9242:9242
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "docker-rs", "--port", "9242" ]
    environment:
      *env-vars
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo3:9242/test --quiet
      interval: 20s
      timeout: 10s
      start_period: 10s

  api:
    #    container_name: api
    image: pauloportfolio/api
    build:
      context: ../..
      dockerfile: Dockerfile
      args:
        JAR_FILE: target/*.jar
    ports:
      - "8080:8080"
      - "5005:5005"
    volumes:
      - api_vol:/data/db
    restart: always
    depends_on:
      - mongo1
    networks:
      - api-net
    #    healthcheck:
    #      test: echo 'db.runCommand("ping").ok' | mongo mongo:9242/test --quiet
    #      interval: 20s
    #      timeout: 10s
    #      start_period: 10s
    #      retries: 3
    environment:
      # API MANAGE AUTOMATICALLY THE PROFILES:
      # A) PROFILES ARE MANAGED/ACTIVATED IN API-APPLICATION.YML -
      #      PROFILE: dev
      PORT_DEBUG: 5005
      <<: *env-vars
      DEBUG_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xmx1G -Xms128m -XX:MaxMetaspaceSize=128m